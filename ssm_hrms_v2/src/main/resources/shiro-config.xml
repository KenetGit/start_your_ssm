<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!--1. 配置一个 securityManager -->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm" />
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!--1.1 需要引用的自定义的Realm-->
    <bean id="myRealm" class="com.kenet.shiro.MyRealm"/>

    <!--2. LifecycleBeanPostProcessor: 管理shiro bean的生命周期-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--3.1 基于表单的身份验证过滤器-->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login.jsp"/>
    </bean>

    <!--3.2 Shiro的web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--shiro的处理，都由securityManger安排 -->
        <property name="securityManager" ref="securityManager"/>
        <!--登录成功，跳转到loginUrl-->
        <property name="loginUrl" value="/hrms/login"/>
        <property name="successUrl" value="/hrms/main"/>
        <!-- 验证不通过执行的请求或者跳转 -->
        <property name="unauthorizedUrl" value="/hrms/unauthorized"/>

        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
        </property>
        <!-- 具体的拦截路径和拦截的方式和角色和权限的范围 -->
        <property name="filterChainDefinitions">
            <value>
                /hrms/login=authc
                /hrms/main=authc
                /hrms/emp/*=authc
                /hrms/dept/*=authc
            </value>
        </property>
    </bean>

    <!--4. 配置启用Shiro的注解功能 -->
    <!--4.1 DefaultAdvisorAutoProxyCreator是用来扫描上下文，寻找所有的Advistor(通知器），
        将这些Advisor应用到所有符合切入点的Bean中，所以必须在lifecycleBeanPostProcessor创建之后创建
     -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <!--4.2 定义aop切面，用于代理如@RequiresPermissions注解的控制器，进行权限控制-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 5. 配置缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!-- 指定 ehcache 的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

</beans>